:- module(bomb, []).
:- subscribe(action, [actor_turn_started]).

% Bombs leave a fake solid 'bomb' dummy on the ground for as long as the fuse is lit.
% Dummies are a special type of actor that do basically nothing while being inserted in the flow of turns.
% The effect of the fuse is attached to this dummy, so if the dummy moves from its original position, so will the fuse animation and explosion.
% The dummy is given the 'invulnerable' trait when it spawns, which locks its health in place (to 1).
% This trait is removed when the fuse runs out and the effect ends. As soon as the trait is removed, an explosion is triggered.
% The explosion automatically takes care of killing the now-vulnerable dummy.
% Since the dummy is NOT impassible, effects work on it! You can teleport a lit bomb around and it will explode elsewhere.

began :- 
	position(@owner, P),
	set_counter(fuse, 3),
	spawn([dummy{texture: items, sprite: bomb, solid: true}], [B]),
	set_counter(dummy, B),
	move(B, P),
	effect(effect_def(bestow_trait, invulnerable), B, _).
ended :-
	counter(dummy, B), 
	effect(effect_def(remove_trait, invulnerable), B, _),
	effect(effect_def(explosion, 2), B, _).

tick :-
	counter(fuse, T),
	counter(dummy, B),
	position(B, P),
	animate(false, P, [fade{texture: items, sprite: bomb, tint: light_red}]),
	animate(true, P, [damage_number{damage: T, tint: light_red}]),
	(	T = 0 
	;   range(0 < T <= 3), Pitch := T / 3,
		atom_concat(countdown, T, Sound),
		sound(Sound{position:P, volume:100, pitch: Pitch})
	).

tock :-
	update_counter(fuse, decrement, T), 
	(T < 0) -> end.

action:actor_turn_started(_{actor: @player}) :- 
	tick, tock.
