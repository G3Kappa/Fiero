:- module(grapple, []).
:- use_module(fiero).
:- use_module(effect).
:- use_module(actor).

effect:began(_{effect_id: Id, source: S, owner: O}) :-
	O as actor is A,
	pull_actor_towards_user(S, A),
	end(Id).
effect:began(_{effect_id: Id, source: S, owner: O}) :-
	O as tile is T,
	pull_user_towards_terrain(S, T),
	end(Id).
effect:ended(_{effect_id: _}) :-
	true.
	
pull_user_towards_terrain(User, Terrain) :-
	location(Terrain, l(_, P)),
	move(User, P).

pull_actor_towards_user(User, Actor) :-
	location( User, l(_, P0)),
	location(Actor, l(_, P1)),
	eval_point(P0 - P1, D0),
	clamp(-1, 1, D0, D1),
	eval_point(P0 - D1, P2),
	move(Actor, P2),
	effect(effect_def{ name: entrapment, duration: 1 }, Actor, _).