:- module(prefabs_test, []).
:- use_module(random).

prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 0, group: base } #-> ([
	R,R,R,R,R,
	R,R,R,R,R,
	R,R,O,R,R,
	R,R,R,R,R,
	R,R,R,R,R
]) :- 
	R = [draw_point(room)],
	O = [draw_point(room), place_marker(spawn_point)].
	
prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 10, group: layout } #-> ([
	S,W,D,W,S,
	W,_,_,_,W,
	D,_,_,_,D,
	W,_,_,_,W,
	S,W,D,W,S
]) :- 
	choose((
		S = [place_marker(feature{type: statue})],
		W = [draw_point(wall)],
		D = [place_marker(feature{type: door})]
	),(
		W = [place_marker(feature{type: statue})],
		D = []
	),(
		W = [draw_point(wall)],
		D = [place_marker(feature{type: statue})],
		S = []
	)).
	
prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 10, group: layout } #-> ([
	W,W,D,W,W,
	W,S,_,S,W,
	D,_,_,_,D,
	W,S,_,S,W,
	W,W,D,W,W
]) :- 
	W = [draw_point(wall)],
	choose(S = [place_marker(feature{type: statue})],()),
	choose(D = [place_marker(feature{type: door})],()).
	
prefab { name: 'room_1x1', size: p(5, 5), tags: {generic, base}, layer: 0, group: base } #-> ([
	W,W,W,W,W,
	W,R,R,R,W,
	W,R,R,R,W,
	W,R,R,R,W,
	W,W,W,W,W
]) :- 
	W = [draw_point(wall)],
	R = [draw_point(room)].
	
	
prefab { name: 'room_2x1', size: p(10, 5), tags: {generic, base}, layer: 0, group: base } #-> ([
	W,W,W,W,W,W,W,W,W,W,
	W,R,R,R,R,R,R,R,R,W,
	W,R,R,R,R,R,R,R,R,W,
	W,R,R,R,R,R,R,R,R,W,
	W,W,W,W,W,W,W,W,W,W
]) :- 
	W = [draw_point(wall)],
	R = [draw_point(room)].
	
prefab { name: '2x2', size: p(10, 10), tags: {generic, base}, layer: 0, group: base } #-> ([
	P,_,_,_,_,P,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	Q,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_
]) :- 
	P = [place_prefab('room_1x1', _, _{tags: {base}})],
	Q = [place_prefab('room_2x1', _, _{tags: {base}})].

prefab { name: '2x2', size: p(10, 10), tags: {generic, path}, layer: 0, group: path } #-> ([
	_,_,_,_,_,_,_,D,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,R,R,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,R,R,R,_,_,R,R,R,_,
	_,_,D,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,M,_,_,_,_,M,_,_,
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,_,_,_,_,_,_
]) :- 
	D = [draw_point(room), place_marker(feature{type: door})],
	R = [draw_point(room)],
	M = [place_marker(npc{type: rat})].
prefab { name: '2x2', size: p(10, 10), tags: {generic, path}, layer: 0, group: path } #-> ([
	_,_,_,_,_,_,_,_,_,_,
	_,_,_,_,R,R,_,_,_,_,
	_,_,_,_,R,R,_,_,_,_,
	_,_,_,_,R,R,_,_,_,_,
	_,R,R,R,R,R,R,R,R,_,
	_,_,D,_,R,R,R,R,R,_,
	_,_,_,W,G,G,_,_,_,_,
	D,_,_,W,G,G,_,_,_,_,
	_,_,_,W,G,G,_,_,M,_,
	_,_,_,_,_,_,_,_,_,_
]) :- 
	D = [draw_point(room), place_marker(feature{type: door})],
	R = [draw_point(room)],
	W = [draw_point(wall)],
	M = [place_marker(npc{type: rat})],
	G = [place_marker(item{type: gold})].
