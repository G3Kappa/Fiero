:- module(prefabs_test, []).
:- use_module(random).

% SPAWN ---------------------------------------------------------------------------------------

prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 0, group: base } #-> ([
	R,R,R,R,R,
	R,R,R,R,R,
	R,R,O,R,R,
	R,R,R,R,R,
	R,R,R,R,R
]) :- 
	R = [draw_point(room)],
	O = [draw_point(room), place_marker(spawn_point)].
	
prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 10, group: layout } #-> ([
	S,W,D,W,S,
	W,_,_,_,W,
	D,_,_,_,D,
	W,_,_,_,W,
	S,W,D,W,S
]) :- 
	choose((
		S = [place_marker(entity{type: feature_statue})],
		W = [draw_point(wall)],
		D = [place_marker(entity{type: feature_door})]
	),(
		W = [place_marker(entity{type: feature_statue})],
		D = []
	),(
		W = [draw_point(wall)],
		D = [place_marker(entity{type: feature_statue})],
		S = []
	)).
	
prefab { name: 'spawn', size: p(5, 5), tags: {spawn}, layer: 10, group: layout } #-> ([
	W,W,D,W,W,
	W,S,_,S,W,
	D,_,_,_,D,
	W,S,_,S,W,
	W,W,D,W,W
]) :- 
	W = [draw_point(wall)],
	choose(S = [place_marker(entity{type: feature_statue})],()),
	choose(D = [place_marker(entity{type: feature_door})],()).

% ROOMS ---------------------------------------------------------------------------------------
	
prefab { name: 'dev_area', size: p(15, 15), grid_size: p(5,5), tags: {dev}, group: base } #-> ([
	F,F,F,
	F,F,F,
	F,F,F
]) :- 
	F = [fill_rect(wall, p(5,5))].