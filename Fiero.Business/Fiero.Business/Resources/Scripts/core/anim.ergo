% Do not modify unless you know what you are doing.

:- module(anim, []).
:- subscribe(action, [actor_moved]).

stop_stuck(Key, StopKey) :-
	data:Key get Dict,
	Ids = Dict.StopKey.ids,
	member(Id, Ids),
	anim:stop(Id),
	data:Key set Dict without {StopKey}.

stick_to(_{id: ActorId}, Animations, stop_stuck(Key, StopKey)) :- 
	atom_concat(anims_, ActorId, Key),
	(data:Key get Dict ; Dict = _{}),
	uuid(StopKey),
	position(_{id: ActorId}, P),
	anim:play(P, Animations, Ids),
	data:Key set Dict with { StopKey: _{ ids: Ids, anims: Animations } }.

action:actor_moved(_ { actor: A }) :- 
	atom_concat(anims_, &A.id, Key),
	data:Key get Dict,
	dict_key_value(Dict, StopKey, _{ anims: Animations }),
	stop_stuck(Key, StopKey),
	position(A, P),
	anim:play(P, Animations, NewIds),
	data:Key set Dict with { StopKey: NewIds, anims: Animations }.