% This module is imported implicitly by all game scripts.
% Do not modify unless you know what you are doing.

:- module(fiero, [as/2]).
:- op(40, yfx, ['as']).

%%% Used as a prefix for game-related macros to make them stand out more
:- op(50, fx, ['@']).
%%% Shorthand macro for matching the player and retrieving the PId
:- expand([O] >> (
	@player(Id) :- 
		O = actor{actor_properties: _{type: player}, id: Id}
)).



%%% AS-IS expressions are used to cast an entity-proxy to a specific type
%%% NOTE: 'as' has a higher precedence than 'is', so this doesn't break arithmetic expressions
Entity as Type is Proxy :-
	cast_entity(Entity, Type, Proxy).