:- module(cli, []).
:- subscribe(scripting, [input_available]).

%%% This script has its input stream redirected to the game console, so calls to read* won't block
scripting:input_available(_) :-
	read_line(L),
	% Echo the user's prompt
	write('> '), write(L), nl,
	% Execute commands
	(command(L) ; true).
%%% Repeats the next command N times
command(Repeat) :-
	str_fmt('repeat {0} {1}', [Num, Thing], Repeat) -> (
		number_string(N, Num),
		repeat(N, command(Thing))
	).
%%% Attempts to spawn a known entity
command(Spawn) :-
	str_fmt('spawn {0}', [Thing], Spawn) -> (
	spawn(Thing) -> (write('spawned: '), write(Thing), nl)
				  ; (write('couldn\'t spawn: '), write(Thing), nl)
	).
%%% Lists all spawnable entities
command(spawn) :-
	bagof(Thing, spawn(Thing), Things),
	write(Things), nl.
%%% Sets the RNG seed to a known hex string
command(SetRngSeed) :-
	str_fmt('seed {0}', [Num], SetRngSeed) -> (
	set_rng_seed(Num) -> (write('seed set to: '), write(Num), nl)
					   ; (write('couldn\'t set seed to: '), write(Num), nl)
	).
	